@model FRIO.MAR.APPLICATION.CORE.Models.FacturaModel

@{
    ViewBag.Title = "Factura";
    ViewBag.pTitle = "Factura";
    ViewBag.pageTitle = "Compras";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link href="~/assets/libs/dropzone/min/dropzone.min.css" rel="stylesheet" />
    <style>
        /*.btn-success {
            background-color: red !important;
        }*/
    </style>
}

<div class="">
    <form id="form-factura" >
         <div class="card" >
             <div class="card-body">
                 <div class="row">
                <input asp-for="Id" type="hidden" />
                <input asp-for="EstadoFactura" type="hidden" />

                <input asp-for="Cliente.Identificacion" type="hidden" />
                <input asp-for="Cliente.RazonSocial" type="hidden" />
                <input asp-for="Cliente.NombreComercial" type="hidden" />
                <input asp-for="Cliente.Telefono" type="hidden" />

                <div class="col-md-2">
                    <label>Fecha</label>
                    <input type="date" asp-for="FechaEmision" class="form-control"/>
                </div>
                <div class="col-md-4">
                    <label>Cliente</label>
                    <select asp-for="Cliente.ClienteId" class="form-control select2">
                        <option selected disabled>--Seleccionar--</option>
                        @foreach(FRIO.MAR.APPLICATION.CORE.Entities.Proveedor proveedor in ViewBag.Proveedores)
                        {
                            <option value="@proveedor.ProveedorId" 
                                data-identificacion="@proveedor.Identificacion" 
                                data-razon-social="@proveedor.RazonSocial" 
                                data-nombre-comercial="@proveedor.NombreComercial" 
                                data-telefono="@proveedor.Telefono" 
                                data-correo="@proveedor.CorreoElectronico">
                            @proveedor.Identificacion - @proveedor.RazonSocial - @proveedor.NombreComercial
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label>Correo</label>
                    <input asp-for="Cliente.CorreoCliente" class="form-control"/>
                </div>
                <div class="col-md-3">
                    <label>Sucursal</label>
                    <select asp-for="SucursalId" class="form-control select2" asp-items="ViewBag.sucursales">
                        <option selected disabled>--Seleccionar--</option>
                    </select>
                </div>
            </div>
             </div>
         </div>

        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <table class="table table-hover table-bordered table-scrollX">
                            <thead>
                                <tr class="text-center bg-dark">
                                    <th>
                                        <button type="button"  id="btn-open-modal-producto" class="btn btn-success " title="agregar producto">
                                            <i class="fa fa-plus"></i> 
                                        </button>
                                       @* <button type="button" id="btn-open-modal-servicio" class="btn btn-info " title="agregar servicio">
                                            <i class="fa fa-plus"></i> 
                                        </button>*@
                                    </th>

                                    <th colspan="7">
                                        <h5 style="color: #fff">Detalle</h5>
                                    </th>
                                </tr>
                                <tr>
                                    <th>Acciones</th>
                                    <th>Código</th>
                                    <th>Descripción</th>

                                    @if(Model.EstadoFactura == FRIO.MAR.APPLICATION.CORE.Constants.EstadoFactura.Proforma){
                                        <th>Código de Seguimiento</th>
                                    }

                                    <th>Precio Unitario</th>
                                    <th>Cantidad</th>
                                    <th>IVA</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody id="tbody-detalle">
                                <partial name="_DetalleFactura" />
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <table class="table table-hover table-bordered ">
                            <thead>
                                <tr class="text-center bg-dark">
                                    <th>
                                        <button type="button" id="btn-open-modal-forma-pago" class="btn btn-success " title="agregar forma de pago">
                                            <i class="fa fa-plus"></i> 
                                        </button>
                                    </th>

                                    @if(Model.EstadoFactura == FRIO.MAR.APPLICATION.CORE.Constants.EstadoFactura.Proforma)
                                    {
                                        <th colspan="2" >
                                             <h5 style="color: #fff">Abonos</h5>
                                        </th>
                                    }else
                                    {
                                        <th colspan="2">
                                             <h5 style="color: #fff">Forma de Pago</h5>
                                        </th>
                                    }
                            
                                </tr>
                                <tr>
                                    <th>Acciones</th>
                                    <th>Forma de Pago</th>
                                    <th>Valor</th>
                                </tr>
                            </thead>
                            <tbody id="tbody-formas-pago">
                                <partial name="_FormasPago" />
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <partial name="_Adjuntos" />
                    </div>
                </div>
            </div>
            <div class="col-md-4" >
                <div class="card">
                    <div class="card-body" id="div-totales">
                        <partial name="_Totales" />
                    </div>
                </div>
                <div class="card">
                    <div class="card-body" id="div-totales">
                        <div class="row">
                            <div class="col-6 d-grid">
                                @if(Model.EstadoFactura == FRIO.MAR.APPLICATION.CORE.Constants.EstadoFactura.Proforma)
                                {
                                    <button type="button"  class="btn btn-success btn-block" onclick="GuardarBorrador()">Guardar Proforma</button>
                                }
                                else
                                {
                                    <button type="button"  class="btn btn-success btn-block" onclick="GuardarBorrador()">Guardar Borrador</button>
                                }
                            </div>
                            <div class="col-6 d-grid">
                                <button type="button" class="btn btn-success btn-block" onclick="Facturar()">Facturar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<partial name="_ModalProducto" />
@*<partial name="_ModalServicio" />*@
<partial name="_ModalFormaPago" />

@section Scripts {
    @*@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}*@
    
    <script src="~/lib/plentz-jquery-maskmoney-cdbeeac/dist/jquery.maskMoney.min.js"></script>
    <script src="~/assets/libs/dropzone/min/dropzone.min.js"></script>
    <script>

        Dropzone.autoDiscover = false;

        function myParamName() {
            return "file";
        }

        $(document).ready(function(){
            console.log(Dropzone);
            $(".dropzone").dropzone({
                url: "@Url.Action("CargarAdjunto", "Ventas")",
                paramName: myParamName, // The name that will be used to transfer the file
                maxFilesize: 2, // MB
                acceptedFiles: ".pdf",
                method: "Post",
                parallelUploads: 20,
                autoProcessQueue: true,
                uploadMultiple: true,
                clickable: true,
                addRemoveLinks: true,
                createImageThumbnails: true,
                success: function (file, response) {
                    if (isEmpty(response)) {
                        MensajeSesionFinalizada();
                        setTimeout(function () {
                            window.location.href = "@Url.Action("index", "Auth")";
                        }, 3000);
                    } else {
                        if (response.status === "success") {
                            MensajeExitoso("Documento cargado");
                            Dropzone.forElement(".dropzone").removeAllFiles(true);

                            response.adjuntos.forEach(elemet => {
                                Adjuntos.push(elemet);
                            });

                            ActualizarTablaAdjunto(Adjuntos);

                        } else {
                            MensajeErrorSwal("Ha existido un problema al cargar los documentos", "");
                        }
                    }
                },
                error: function (file, response) {
                    MensajeErrorSwal(response, "Factura Estandar");
                }
            });

            $(".select2").select2();
            $(".decimal").maskMoney();

            $("#btn-open-modal-producto").click(function(){
                $("#modal-agregar-producto").modal("show");
            });
            
            $("#btn-open-modal-servicio").click(function(){
                $("#modal-agregar-servicio").modal("show");
            });
            
            $("#btn-open-modal-forma-pago").click(function(){
                $("#modal-agregar-forma-pago").modal("show");
            });

            $("#Cliente_ClienteId").change(function(){
                $("#Cliente_CorreoCliente").val($("#Cliente_ClienteId option:selected").attr("data-correo"));
                $("#Cliente_Identificacion").val($("#Cliente_ClienteId option:selected").attr("data-identificacion"));
                $("#Cliente_RazonSocial").val($("#Cliente_ClienteId option:selected").attr("data-razon-social"));
                $("#Cliente_NombreComercial").val($("#Cliente_ClienteId option:selected").attr("data-nombre-comercial"));
                $("#Cliente_Telefono").val($("#Cliente_ClienteId option:selected").attr("data-telefono"));
            });
            
            $("#producto").change(function(){
                $("#producto-iva").val($("#producto option:selected").attr("data-iva"));
                $("#producto-unidad-medida").val($("#producto option:selected").attr("data-unidad-medida"));
                $("#producto-precio-unitario").val($("#producto option:selected").attr("data-precio-unitario"));
                $("#producto-codigo").val($("#producto option:selected").attr("data-codigo"));
                $("#producto-descripcion").val($("#producto option:selected").attr("data-descripcion"));
            });

            $("#servicio").change(function(){
                $("#servicio-iva").val($("#servicio option:selected").attr("data-iva"));
                $("#servicio-unidad-medida").val($("#servicio option:selected").attr("data-unidad-medida"));
                $("#servicio-precio-unitario").val($("#servicio option:selected").attr("data-precio-unitario"));
                $("#servicio-codigo").val($("#servicio option:selected").attr("data-codigo"));
                $("#servicio-descripcion").val($("#servicio option:selected").attr("data-descripcion"));
            });
            
            $("#btn-agrega-producto").click(function(){
                AgregarProducto();
            });

            $("#btn-agrega-servicio").click(function(){
                AgregarServicio();
            });
        });

        function GuardarBorrador(){
            var formContainer = $('form#form-factura');
            $.post('@Url.Action("GuardarFactura", "Compras")', formContainer.serialize())
            .done(function(response){
                if (response.estado){
                    MensajeExitosoSwalConfirmacionRedireccion("Documento guardado", "", '@Url.Action("Index", "Compras")');
                }else{
                    MensajeErrorSwal(response.mensaje, "");
                }
            })
            .fail(function(error){
                MsgAjaxError(error);
            });
        }

        function Facturar(){

            var FechaEmision = $("#FechaEmision").val();
            var Cliente_ClienteId = $("#Cliente_ClienteId").val();
            var Cliente_CorreoCliente = $("#Cliente_CorreoCliente").val();
            var SucursalId = $("#SucursalId").val();

            if (FechaEmision === null || FechaEmision === undefined || FechaEmision.trim() === "0001-01-01"){
                MensajeGrowl("Ingrese una fecha de emisión");
                return;
            }

            if (Cliente_ClienteId === null || Cliente_ClienteId === undefined || Cliente_ClienteId.trim() === ""){
                MensajeGrowl("Seleccione un cliente");
                return;
            }

            if (Cliente_CorreoCliente === null || Cliente_CorreoCliente === undefined || Cliente_CorreoCliente.trim() === ""){
                MensajeGrowl("Ingrese un correo electrónico");
                return;
            }

            if (SucursalId === null || SucursalId === undefined || SucursalId.trim() === ""){
                MensajeGrowl("Seleccione una sucursal");
                return;
            }

            var formContainer = $('form#form-factura');
            $.post('@Url.Action("Facturar", "Compras")', formContainer.serialize())
            .done(function(response){
                if (response.estado){
                    MensajeExitosoSwalConfirmacionRedireccion("Documento facturado", "", '@Url.Action("Index", "Compras")');
                }else{
                    MensajeErrorSwal(response.mensaje, "");
                }
            })
            .fail(function(error){
                MsgAjaxError(error);
            });
        }

        function EliminarItem(Id){
            $.post('@Url.Action("EliminarItem", "Compras")', 
            {
                Id: Id
            })
            .done(function(response){
                if (response.estado){
                    ConstruirDetalles();
                }else{
                    MensajeErrorSwal(response.mensaje, "");
                }
            })
            .fail(function(error){
                MsgAjaxError(error);
            });
        }
        
        function EliminarFormaPago(Id){
            $.post('@Url.Action("EliminarFormaPago", "Compras")', 
            {
                Id: Id
            })
            .done(function(response){
                if (response.estado){
                    ConstruirDetalles();
                }else{
                    MensajeErrorSwal(response.mensaje, "");
                }
            })
            .fail(function(error){
                MsgAjaxError(error);
            });
        }

        function ActualizarItem(Tipo, Valor, Id){
            $.post('@Url.Action("ActualizarItem", "Compras")', 
            {
                Tipo: Tipo,
                Id: Id,
                Valor: Valor
            })
            .done(function(response){
                if (response.estado){
                    ConstruirDetalles();
                }else{
                    MensajeErrorSwal(response.mensaje, "");
                }
            })
            .fail(function(error){
                MsgAjaxError(error);
            });
        }

        function AgregarServicio(){
            var cliente = $("#Cliente_ClienteId").val();
            var servicioId = $("#servicio").val();
            var productoClienteId = $("#producto-cliente").val();
            var iva = $("#servicio-iva").val();
            var unidadMedida = $("#servicio-unidad-medida").val();
            var precioUnitario = $("#servicio-precio-unitario").val();
            var cantidad = $("#servicio-cantidad").val();
            var codigo = $("#servicio-codigo").val();
            var descripcion = $("#servicio-descripcion").val();

            if (servicioId === null || servicioId === undefined || servicioId.trim() === ""){
                MensajeGrowl("Seleccione un servicio");
                return;
            }

            if (precioUnitario === null || precioUnitario === undefined || precioUnitario.trim() === ""){
                MensajeGrowl("Ingrese un precio unitario");
                return;
            }

            if (cantidad === null || cantidad === undefined || cantidad.trim() === ""){
                MensajeGrowl("Ingrese una cantidad");
                return;
            }

            $.post('@Url.Action("AgregarServicio", "Compras")', 
            {
                Servicio: {
                    ProductoId: servicioId,
                    Codigo: codigo,
                    Descripcion: descripcion,
                    PrecioUnitario: precioUnitario,
                    Cantidad: cantidad,
                    IvaPorcentaje: iva
                },
                ProductoClienteId: productoClienteId,
                Cliente: cliente,
                Estado: $("#EstadoFactura").val()
            }, function(response){
                if (response.estado){
                    ConstruirDetalles();
                    LimpiarModal();
                }else{
                    MensajeErrorSwal(response.mensaje, "");
                }
            }).fail(function(error){
                MsgAjaxError(error);
            });
        }

        function AgregarProducto(){
            var productoId = $("#producto").val();
            var iva = $("#producto-iva").val();
            var unidadMedida = $("#producto-unidad-medida").val();
            var precioUnitario = $("#producto-precio-unitario").val();
            var cantidad = $("#producto-cantidad").val();
            var codigo = $("#producto-codigo").val();
            var descripcion = $("#producto-descripcion").val();

            if (productoId === null || productoId === undefined || productoId.trim() === ""){
                MensajeGrowl("Seleccione un producto");
                return;
            }

            if (precioUnitario === null || precioUnitario === undefined || precioUnitario.trim() === ""){
                MensajeGrowl("Ingrese un precio unitario");
                return;
            }

            if (cantidad === null || cantidad === undefined || cantidad.trim() === ""){
                MensajeGrowl("Ingrese una cantidad");
                return;
            }

            $.post('@Url.Action("AgregarProducto", "Compras")', 
            {
                Producto: {
                    ProductoId: productoId,
                    Codigo: codigo,
                    Descripcion: descripcion,
                    PrecioUnitario: precioUnitario,
                    Cantidad: cantidad,
                    IvaPorcentaje: iva
                }
            }, function(response){
                if (response.estado){
                    ConstruirDetalles();
                    LimpiarModal();
                }else{
                    MensajeErrorSwal(response.mensaje, "");
                }
            }).fail(function(error){
                MsgAjaxError(error);
            });
        }

        function AgregarFormaPago(){
            var formaPago = $("#forma-pago").val();
            var formaPagoDescripcion = $("#forma-pago option:selected").attr('data-descripcion');
            var formaPagoValor = $("#forma-pago-valor").val();
            var formaPagoObservacion = $("#forma-pago-observacion").val();


            if (formaPago === null || formaPago === undefined || formaPago.trim() === ""){
                MensajeGrowl("Seleccione una forma de pago");
                $("#forma-pago").focus();
                return;
            }

            if (formaPagoValor === null || formaPagoValor === undefined || formaPagoValor.trim() === ""){
                MensajeGrowl("Ingrese un valor");
                $("#forma-pago-valor").focus();
                return;
            }

            $.post('@Url.Action("AgregarFormaPago", "Compras")', 
            {
                FormaPago: {
                    Valor: formaPagoValor,
                    FormaPagoCodigo: formaPago,
                    FormaPagoDescripcion: formaPagoDescripcion,
                    Observacion: formaPagoObservacion,
                }
            }, function(response){
                if (response.estado){
                    ConstruirDetalles();
                    LimpiarModal();
                }else{
                    MensajeErrorSwal(response.mensaje, "");
                }
            }).fail(function(error){
                MsgAjaxError(error);
            });
        }

        function CalcularTotales(){
            $.post('@Url.Action("CalcularFactura", "Compras")', { Estado: $("#EstadoFactura").val() }, function(response){
                $("#div-totales").empty();
                $("#div-totales").html(response);
            })
            .fail(function(error){
                MsgAjaxError(error);
            });
        }

        function ConstruirDetalles(){
            $.post('@Url.Action("ConstruirDetalles", "Compras")', { Estado: $("#EstadoFactura").val() }, function(response){
                $("#tbody-detalle").empty();
                $("#tbody-detalle").html(response);
            })
            .fail(function(error){
                MsgAjaxError(error);
            });

            $.post('@Url.Action("ConstruirFormasPago", "Compras")', { Estado: $("#EstadoFactura").val() }, function(response){
                $("#tbody-formas-pago").empty();
                $("#tbody-formas-pago").html(response);
            })
            .fail(function(error){
                MsgAjaxError(error);
            });
            
            CalcularTotales();
        }

        function LimpiarModal(){
            $(".limiar-input-modal").val("");
            $(".limiar-select-modal").val("").trigger('change');
        }
    </script>

    
    @Html.Raw(TempData["msg"])
}